# prettier-ignore
name: CI

on: [pull_request]
  
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up cache
        uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'

      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up cache
        uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'

      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Test
        run: npm run test

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up cache
        uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'

      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Build packages
        run: npm run build

  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up cache
        uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-storybook-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'

      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook